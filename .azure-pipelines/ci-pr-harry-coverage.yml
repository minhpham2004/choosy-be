# PR CI for Nest backend at repo root
trigger: none
pr:
  branches:
    include: ['*']
  paths:
    include:
      - '**'

pool:
  vmImage: 'ubuntu-latest'

variables:
  PROJECT_DIR: '.'             # repo root
  NODE_VERSION: '18.x'
  # Safe test env so unit tests never try real services:
  NODE_ENV: 'test'
  JWT_SECRET: 'dev-secret'
  MONGODB_URI: 'mongodb://localhost:27017/DO_NOT_CONNECT_IN_UNIT_TESTS'
  DB_NAME: 'choosy_test'
  PORT: '0'                   # unused in unit tests
  # jest-junit output path
  JEST_JUNIT_OUTPUT: 'junit.xml'

steps:
  - checkout: self
    fetchDepth: 1

  # Debug: show root files
  - script: |
      echo "Repo root: $(Build.SourcesDirectory)"
      ls -la
    displayName: 'List files (debug)'

  # Cache node_modules by lockfile hash (speed up)
  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | **/package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: '$(PROJECT_DIR)/node_modules'
    displayName: 'Cache node_modules'

  - task: NodeTool@0
    inputs:
      versionSpec: '$(NODE_VERSION)'
    displayName: 'Install Node.js $(NODE_VERSION)'

  - script: npm ci
    workingDirectory: '$(PROJECT_DIR)'
    displayName: 'Install dependencies'

  - script: npm run build
    workingDirectory: '$(PROJECT_DIR)'
    displayName: 'Build NestJS app'

  # Run unit tests with JUnit + coverage (Cobertura will be in coverage/)
  - script: |
      npx jest --ci --coverage --reporters=default --reporters=jest-junit
    env:
      NODE_ENV: $(NODE_ENV)
      JWT_SECRET: $(JWT_SECRET)
      MONGODB_URI: $(MONGODB_URI)
      DB_NAME: $(DB_NAME)
      PORT: $(PORT)
      JEST_JUNIT_OUTPUT: $(JEST_JUNIT_OUTPUT)
    workingDirectory: '$(PROJECT_DIR)'
    displayName: 'Run unit tests (JUnit + coverage)'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '$(PROJECT_DIR)/$(JEST_JUNIT_OUTPUT)'
      testResultsFormat: 'JUnit'
      failTaskOnFailedTests: true
    condition: succeededOrFailed()
    displayName: 'Publish test results'

  - task: PublishCodeCoverageResults@2
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(PROJECT_DIR)/coverage/cobertura-coverage.xml'
      reportDirectory: '$(PROJECT_DIR)/coverage'
    condition: succeededOrFailed()
    displayName: 'Publish code coverage'

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(PROJECT_DIR)/dist'
      ArtifactName: 'nestjs-app'
      publishLocation: 'Container'
    displayName: 'Publish build artifact'
