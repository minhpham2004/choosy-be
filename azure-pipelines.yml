trigger:
- '*'  

pool:
  vmImage: ubuntu-latest

steps:
# 1. Install Node.js
- task: NodeTool@0
  inputs:
    versionSpec: '20.x'
  displayName: 'Install Node.js'

# 2. Install dependencies
- script: npm ci
  displayName: 'Install dependencies'

# 3. Build NestJS app
- script: npm run build
  displayName: 'Build NestJS app'

# 4. Run Jest tests with coverage
- script: |
    npm install --save-dev jest-junit
    npx jest --ci --coverage --reporters=default --reporters=jest-junit
  displayName: 'Run unit tests with coverage + JUnit report'

# 5. Publish test results
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/junit.xml'
    testResultsFormat: 'JUnit'
  condition: succeededOrFailed()
  displayName: 'Publish test results'

# 6. Publish code coverage (Cobertura)
- task: PublishCodeCoverageResults@2
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'coverage/cobertura-coverage.xml'
    reportDirectory: 'coverage'
  condition: succeededOrFailed()
  displayName: 'Publish code coverage'

# 7. Clean up dev dependencies and test files
- script: |
    rm -rf node_modules
    rm -rf coverage
    rm -rf test
    rm -rf src  # Remove source files, we only need dist
    npm ci --omit=dev  # Install only production dependencies
  displayName: 'Prepare production files'

# 8. Archive application files
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
    replaceExistingArchive: true
  displayName: 'Archive application files'

# 9. Publish build artifacts 
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/app.zip'
    ArtifactName: 'nestjs-app'
    publishLocation: 'Container'
  displayName: 'Publish build artifact'

# 10. Deploy to Azure App Service
- task: AzureWebApp@1
  inputs:
    azureSubscription: 'choosy-api-connection' 
    appType: 'webAppLinux'                            
    appName: 'api-choosy'                
    package: '$(Build.ArtifactStagingDirectory)/app.zip'
    runtimeStack: 'NODE|20-lts'
  displayName: 'Deploy to Azure App Service'